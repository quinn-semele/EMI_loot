plugins {
    id 'java-library'
    id 'net.neoforged.moddev' version '1.0.14'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = "${project.mod_version}+${project.minecraft_version}+neoforge"
group = project.maven_group

repositories {
    mavenLocal()
}

base {
    archivesName = project.archives_base_name
}

// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    // Specify the version of NeoForge to use.
    version = project.neoforge_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()
        }

        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "BadAsIntended"
        url = "https://maven2.bai.lol/"
        content {
            includeGroup "lol.bai"
        }
    }
}

dependencies {
    implementation "dev.emi:emi-neoforge:${project.emi_version}"
    implementation "lol.bai:badpackets:neo-${project.badpackets_version}"
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version_range: project.minecraft_version_range,
            neo_version_range      : project.neo_version_range,
            loader_version_range   : project.loader_version_range,
            mod_version            : version,
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 21
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
