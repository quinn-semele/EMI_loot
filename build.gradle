plugins {
    id "dev.architectury.loom" version "1.7-SNAPSHOT"
}

base {
    archivesName = project.archives_base_name
}

version = "${project.mod_version}+${project.minecraft_version}+neoforge"
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/emi_loot.accesswidener")
}

repositories {
    maven {
        name = "NeoForged"
        url = "https://maven.neoforged.net/releases/"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "BadAsIntended"
        url = "https://maven2.bai.lol/"
        content {
            includeGroup "lol.bai"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
        mappings "dev.architectury:yarn-mappings-patch-neoforge:1.21+build.4"
    }
    neoForge "net.neoforged:neoforge:${project.neoforge_version}"

    modImplementation "dev.emi:emi-neoforge:${project.emi_version}"
    modImplementation "lol.bai:badpackets:neo-${project.badpackets_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

tasks.remapJar {
    atAccessWideners.add(loom.accessWidenerPath.get().asFile.absolutePath)
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    exclude "emi_loot.accesswidener"

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}